"""Add audit logging and multilingual document processing

Revision ID: 5c448b08fbc7
Revises: 0283144cf0fb
Create Date: 2025-09-21 10:24:17.801833

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '5c448b08fbc7'
down_revision = '0283144cf0fb'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('audit_logs',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.Column('action', sa.String(length=100), nullable=False),
    sa.Column('resource_type', sa.String(length=50), nullable=False),
    sa.Column('resource_id', sa.UUID(), nullable=True),
    sa.Column('ip_address', sa.String(length=45), nullable=True),
    sa.Column('user_agent', sa.Text(), nullable=True),
    sa.Column('request_method', sa.String(length=10), nullable=True),
    sa.Column('endpoint', sa.String(length=255), nullable=True),
    sa.Column('old_values', sa.Text(), nullable=True),
    sa.Column('new_values', sa.Text(), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('user_locale', sa.String(length=5), nullable=True),
    sa.Column('extra_data', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_audit_resource', 'audit_logs', ['resource_type', 'resource_id'], unique=False)
    op.create_index('idx_audit_status', 'audit_logs', ['status'], unique=False)
    op.create_index('idx_audit_timestamp', 'audit_logs', ['created_at'], unique=False)
    op.create_index('idx_audit_user_action', 'audit_logs', ['user_id', 'action'], unique=False)
    op.create_index(op.f('ix_audit_logs_action'), 'audit_logs', ['action'], unique=False)
    op.create_index(op.f('ix_audit_logs_resource_id'), 'audit_logs', ['resource_id'], unique=False)
    op.create_index(op.f('ix_audit_logs_resource_type'), 'audit_logs', ['resource_type'], unique=False)
    op.create_table('document_languages',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('document_id', sa.UUID(), nullable=False),
    sa.Column('language_code', sa.String(length=5), nullable=False),
    sa.Column('confidence_score', sa.Integer(), nullable=False),
    sa.Column('is_primary', sa.Boolean(), nullable=False),
    sa.Column('extracted_text', sa.Text(), nullable=True),
    sa.Column('keywords', sa.Text(), nullable=True),
    sa.Column('processing_status', sa.String(length=20), nullable=False),
    sa.Column('ai_category_suggestion', sa.UUID(), nullable=True),
    sa.Column('ai_confidence', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['ai_category_suggestion'], ['categories.id'], ),
    sa.ForeignKeyConstraint(['document_id'], ['documents.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_doc_lang_code', 'document_languages', ['language_code'], unique=False)
    op.create_index('idx_doc_lang_document', 'document_languages', ['document_id'], unique=False)
    op.create_index('idx_doc_lang_primary', 'document_languages', ['document_id', 'is_primary'], unique=False)
    op.create_index(op.f('ix_document_languages_language_code'), 'document_languages', ['language_code'], unique=False)
    op.add_column('documents', sa.Column('primary_language', sa.String(length=5), nullable=True))
    op.add_column('documents', sa.Column('detected_languages', sa.Text(), nullable=True))
    op.create_index('idx_document_primary_lang', 'documents', ['primary_language'], unique=False)
    op.create_index(op.f('ix_documents_primary_language'), 'documents', ['primary_language'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_documents_primary_language'), table_name='documents')
    op.drop_index('idx_document_primary_lang', table_name='documents')
    op.drop_column('documents', 'detected_languages')
    op.drop_column('documents', 'primary_language')
    op.drop_index(op.f('ix_document_languages_language_code'), table_name='document_languages')
    op.drop_index('idx_doc_lang_primary', table_name='document_languages')
    op.drop_index('idx_doc_lang_document', table_name='document_languages')
    op.drop_index('idx_doc_lang_code', table_name='document_languages')
    op.drop_table('document_languages')
    op.drop_index(op.f('ix_audit_logs_resource_type'), table_name='audit_logs')
    op.drop_index(op.f('ix_audit_logs_resource_id'), table_name='audit_logs')
    op.drop_index(op.f('ix_audit_logs_action'), table_name='audit_logs')
    op.drop_index('idx_audit_user_action', table_name='audit_logs')
    op.drop_index('idx_audit_timestamp', table_name='audit_logs')
    op.drop_index('idx_audit_status', table_name='audit_logs')
    op.drop_index('idx_audit_resource', table_name='audit_logs')
    op.drop_table('audit_logs')
    # ### end Alembic commands ###